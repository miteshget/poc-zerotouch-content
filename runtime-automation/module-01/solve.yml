---
- name: Create inventory
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Add nodes
      ansible.builtin.add_host:
        name: "{{ item }}"
        ansible_ssh_host: "{{ item }}"
        ansible_ssh_port: "{{ lookup('ansible.builtin.env', 'BASTION_PORT') }}"
        ansible_ssh_user: "{{ lookup('ansible.builtin.env', 'BASTION_USER') }}"
        ansible_ssh_pass: "{{ lookup('ansible.builtin.env', 'BASTION_PASSWORD') }}"
        ansible_python_interpreter: /usr/libexec/platform-python
      loop:
        - controller
        - vscode


- name: solve challenge 1
  hosts: controller
  # collections:
  #   - ansible.controller
  vars:
    aap_hostname: localhost
    aap_username: admin
    aap_password: ansible123!
    aap_validate_certs: false
  tasks:

    # - name: Create network backup job template
    #   ansible.controller.job_template:
    #     name: "Network Automation - Backup"
    #     job_type: "run"
    #     organization: "Default"
    #     inventory: Network Inventory
    #     project: "Network Toolkit"
    #     playbook: "playbooks/network_backup.yml"
    #     credentials:
    #       - "Network Credential"
    #       - "AAP controller credential"
    #     execution_environment: "Default execution environment"
    #     state: "present"
    #     extra_vars:
    #       restore_inventory: "Network Inventory"
    #       restore_project: "Network Toolkit"
    #       restores_playbook: "playbooks/network_restore.yml"
    #       restore_credential: "Network Credential"
    #     controller_username: "{{ aap_username }}"
    #     controller_password: "{{ aap_password }}"
    #     controller_host: "https://{{ aap_hostname }}"
    #     validate_certs: "{{ aap_validate_certs }}" 
    - debug: 
    - name: Write error message and fail the task if inventory file is missing
      validation_check:
        error_msg: "Inventory file does not exist (False)"
        pass_msg: "Inventory file exists (True)"
        check: r_hosts |default(false) | bool #(False)