---
- name: Create inventory
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Add nodes
      ansible.builtin.add_host:
        name: "{{ item }}"
        ansible_ssh_host: "{{ item }}"
        ansible_ssh_port: "{{ lookup('ansible.builtin.env', 'BASTION_PORT') }}"
        ansible_ssh_user: "{{ lookup('ansible.builtin.env', 'BASTION_USER') }}"
        ansible_ssh_pass: "{{ lookup('ansible.builtin.env', 'BASTION_PASSWORD') }}"
        ansible_python_interpreter: /usr/libexec/platform-python
      loop:
        - controller
        - vscode

- name: solve challenge 3
  hosts: controller
  gather_facts: false
  collections:
    - ansible.controller
  vars:
    aap_hostname: localhost
    aap_username: admin
    aap_password: "{{ lookup('ansible.builtin.env', 'BASTION_PASSWORD') }}"
    aap_validate_certs: false
  tasks:
    - name: Find backups
      ansible.builtin.find:
        paths: /backup
        file_type: directory
      register: backups
      run_once: true
      become: true
      delegate_to: vscode
      delegate_facts: true

    - name: Create Launch Network Automation - Restore job template
      ansible.controller.job_template:
        name: "Network Automation - Restore"
        job_type: "run"
        organization: "Default"
        inventory: Network Inventory
        project: "Network Toolkit"
        playbook: "playbooks/network_restore.yml"
        credentials:
          - "Network Credential"
        execution_environment: "network workshop execution environment"
        state: "present"
        survey_enabled: true
        survey_spec: "{{ lookup('template', '{{ playbook_dir }}/survey-backup.j2') }}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}" 

    - name: Launch Network Automation - Restore
      ansible.controller.job_launch:
        job_template: "Network Automation - Restore"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}"
      register: job
