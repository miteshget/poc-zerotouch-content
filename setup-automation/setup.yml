---
- name: Create inventory
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Add nodes
      ansible.builtin.add_host:
        name: "{{ item }}"
        ansible_ssh_host: "{{ item }}"
        ansible_ssh_port: "{{ lookup('ansible.builtin.env', 'BASTION_PORT') }}"
        ansible_ssh_user: "{{ lookup('ansible.builtin.env', 'BASTION_USER') }}"
        ansible_ssh_pass: "{{ lookup('ansible.builtin.env', 'BASTION_PASSWORD') }}"
        ansible_python_interpreter: /usr/libexec/platform-python
      loop:
        - controller
        - vscode


- name: Configure Automation Controller
  hosts: controller
  collections:
    - ansible.controller
  vars:
    aap_hostname: localhost
    aap_username: admin
    aap_password: "{{ lookup('ansible.builtin.env', 'BASTION_PASSWORD') }}"
    aap_validate_certs: false
    guid: "{{ lookup('ansible.builtin.env', 'GUID') }}"
    domain: "{{ lookup('ansible.builtin.env', 'DOMAIN') }}"
  tasks:
    - name: ensure tower/controller is online and working
      uri:
        url: https://{{ aap_hostname }}/api/controller/v2/ping/
        method: GET
        user: "{{ aap_username }}"
        password: "{{ aap_password }}"
        validate_certs: false
        force_basic_auth: true
      register: _r_controller_online
      until: _r_controller_online is success
      delay: 3
      retries: 5

    - name: Add network machine credential
      ansible.controller.credential:
        name: "Network Credential"
        organization: "Default"
        credential_type: Machine
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}"      
        inputs:
          username: "admin"
          password: "{{ lookup('ansible.builtin.env', 'BASTION_PASSWORD') }}"

    - name: Add controller credential
      ansible.controller.credential:
        name: "AAP controller credential"
        organization: "Default"
        credential_type: Red Hat Ansible Automation Platform
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}"     
        inputs:
          host: "controller-{{ guid }}.{{ domain }}"
          username: "admin"
          password: "{{ lookup('ansible.builtin.env', 'BASTION_PASSWORD') }}"
          verify_ssl: false

    - name: Add project
      ansible.controller.project:
        name: "Network Toolkit"
        scm_url: "https://github.com/network-automation/toolkit"
        scm_type: git
        organization: "Default"
        scm_update_on_launch: False
        scm_update_cache_timeout: 60
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}"

    - name: Add EE to the controller instance
      ansible.controller.execution_environment:
        name: "network workshop execution environment"
        image: "quay.io/acme_corp/network-ee:aap24b"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}" 

    - name: create inventory
      ansible.controller.inventory:
        name: "Network Inventory"
        organization: "Default"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}"     
      register: _r_workshop_inventory
      until: _r_workshop_inventory is success
      delay: 3
      retries: 5

    - name: Add cisco host
      ansible.controller.host:
        name: cisco
        description: "ios-xe csr running on GCP"
        inventory: "Network Inventory"
        state: present
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}" 
        variables:
            ansible_network_os: ios
            ansible_user: admin
            ansible_password: "{{ lookup('ansible.builtin.env', 'BASTION_PASSWORD') }}"
            ansible_host: "cisco"
            ansible_connection: network_cli
            ansible_become: true
            ansible_become_method: enable

    - name: Add backup server host
      ansible.controller.host:
        name: "backup-server"
        description: "this server is where we backup network configuration"
        inventory: "Network Inventory"
        state: present
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}" 
        variables:
            note: in production these passwords would be encrypted in vault
            ansible_host: vscode
            ansible_user: rhel
            ansible_password: "{{ lookup('ansible.builtin.env', 'BASTION_PASSWORD') }}"

    - name: Add group
      ansible.controller.group:
        name: "network"
        description: "Network Group"
        inventory: "Network Inventory"
        state: present
        hosts:
          - cisco
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        controller_host: "https://{{ aap_hostname }}"
        validate_certs: "{{ aap_validate_certs }}"

- name: Configure vscode
  hosts: vscode
  tasks:
    - name: Stop the services
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
      loop:
        - firewalld
        - code-server

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /home/rhel/.config/code-server/config.yaml
        state: absent

    - name: Reconfigure codeserver config
      ansible.builtin.copy:
        content: |
          bind-addr: 0.0.0.0:8080
          auth: none
          cert: false
          disable-update-check: true
        dest: /home/rhel/.config/code-server/config.yaml
        owner: rhel

    - name: Codeserver settings
      ansible.builtin.copy:
        content: |
          {
            "git.ignoreLegacyWarning": true,
            "window.menuBarVisibility": "visible",
            "git.enableSmartCommit": true,
            "workbench.tips.enabled": false,
            "workbench.startupEditor": "readme",
            "telemetry.enableTelemetry": false,
            "search.smartCase": true,
            "git.confirmSync": false,
            "workbench.colorTheme": "Solarized Dark",
            "update.showReleaseNotes": false,
            "update.mode": "none",
            "ansible.ansibleLint.enabled": false,
            "ansible.ansible.useFullyQualifiedCollectionNames": true,
            "files.associations": {
                "*.yml": "ansible",
                "*.yaml": "ansible"
            },
            "files.exclude": {
              "**/.*": true
            },
            "files.watcherExclude": {
              "**": true
            },
            "files.watcherExclude": {
              "**": true
            },
            "security.workspace.trust.enabled": false,
            "redhat.telemetry.enabled": false,
            "ansibleLint.enabled": false,
            "ansible.validation.lint.enabled": false,
            "ansible.validation.enabled": false,
            "ansible.lightspeed.enabled": false,
            "ansible.lightspeed.suggestions.enabled": false
            "python.useEnvironmentsExtension": false
          }
        dest: /home/rhel/.local/share/code-server/User/settings.json
        owner: rhel

    - name: Start code-server
      become: true
      ansible.builtin.service:
        name: code-server
        state: stopped

    - name: Create ansible navigator file
      ansible.builtin.copy:
        content: |
          ---
          ansible-navigator:
            ansible:
              inventory:
                entries:
                  - /home/rhel/hosts
            execution-environment:
              container-engine: podman
              enabled: true
              image: quay.io/acme_corp/network-ee
              pull:
                policy: missing
            logging:
              level: debug
            playbook-artifact:
              save-as: /home/rhel/playbook-artifacts/{playbook_name}-artifact-{time_stamp}.json
        dest: /home/rhel/ansible-navigator.yml
        owner: rhel

    - name: Setup hosts
      ansible.builtin.copy:
        content: |
          cisco ansible_connection=network_cli ansible_network_os=ios ansible_become=true ansible_user=admin ansible_password=ansible123!
          vscode ansible_user=rhel ansible_password=ansible123!
        dest: /home/rhel/hosts
        owner: rhel

    - name: Setup ansible.cfg
      ansible.builtin.copy:
        content: |
          [defaults]
          # stdout_callback = yaml
          connection = smart
          timeout = 60
          deprecation_warnings = False
          action_warnings = False
          system_warnings = False
          host_key_checking = False
          collections_on_ansible_version_mismatch = ignore
          retry_files_enabled = False
          interpreter_python = auto_silent

          [persistent_connection]
          connect_timeout = 200
          command_timeout = 200
        dest: /home/rhel/ansible.cfg
        owner: rhel

    - name: Create directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        recurse: true
        owner: rhel
        group: rhel
      loop:
        - /home/rhel/playbook-artifacts
        - /home/rhel/.ssh

    - name: Create ssh config
      ansible.builtin.copy:
        content: |
          Host *
            StrictHostKeyChecking no
            User ansible
        dest: /home/rhel/.ssh/config
        owner: rhel

    - name: Run loginctl command
      become: true
      ansible.builtin.command: loginctl enable-linger rhel
